
/// ---- BUILDINGS ----
// Concept: use hash to build 8 buildings
// Unused: block number
// Each 64 hex digits (32 bytes) gets equally divided into 8 hex digits strings, each representing a building
// each building is codified as:
// x1, x2, z1, z2, y1, r, g, b (each of these being a hex digit)
// where (x1, x2) are x start and end coordinates
// (z1, z2) are z start and end coodrinates
// y1 is the height of the building
// r g b builds a color (4,096 total possible colors)

function buildBuilding(buildingHex) {

  const xBase = 4
  const zBase = 4

  // console.log('Building hex: ', buildingHex)

  // calculate x1 and x2
  let x1 = parseInt('0x' + buildingHex.substring(0, 1), 16) / 2.0 // 1st hex digit translated to [0, 7.5]
  let x2 = parseInt('0x' + buildingHex.substring(1, 2), 16) / 2.0 + 0.5 // 2nd hex digit translated to [0.5, 8]

  // calculate z1 and z2
  let z1 = parseInt('0x' + buildingHex.substring(2, 3), 16) / 2.0 // 3rd hex digit translated to [0, 7]
  let z2 = parseInt('0x' + buildingHex.substring(3, 4), 16) / 2.0 + 0.5 // 4th hex digit translated to [0.5, 8]

  // calculate y1 (height)
  let y1 = (parseInt('0x' + buildingHex.substring(4, 5), 16) + 1)/ 8.0 // 5th hex digit translated to [1/16, 2]

  // console.log('Coordinates: x1', x1, 'x2', x2, 'z1', z1, 'z2', z2, 'y1', y1)

  // calulate width, height, and length
  let width = Math.max(1, Math.abs(x1 - x2))
  let height = y1
  let length = Math.max(1, Math.abs(z1 - z2))

  // calculate xStart and zStart
  let xStart = Math.min(x1, x2)
  let zStart = Math.min(z1, z2)

  // console.log('Dimensions: width', width, 'height', height, 'length', length)
  // console.log('X start', xStart, 'Z start', zStart)

  // calculate color
  let colorHex = '#' + buildingHex.substring(5,6) + '0' + buildingHex.substring(6,7) + '0' + buildingHex.substring(7,8) + '0'
  // console.log('Color: ', colorHex)

  // add the color
  let buildingMaterial = new Material()
  buildingMaterial.hasAlpha = true
  buildingMaterial.albedoColor = Color3.FromHexString(colorHex)

  // add the cube
  let building = new Entity()
  building.addComponent(buildingMaterial)
  building.addComponent(new BoxShape())
  building.addComponent(new Transform({
    scale: new Vector3(width, height, length),
    position: new Vector3(xBase + xStart + width / 2.0, height / 2.0, zBase + zStart + length / 2.0)
  }))

  // render the building
  engine.addEntity(building)
}

function buildBuildingsArtwork(blockNumber: number, hash: string) {
  for(let i = 0; i < 8; i++) {
    buildBuilding(hash.substring(i * 8, (i + 1) * 8))
  }
}
